name: Go CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Run go fmt
        run: go fmt ./...

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -coverprofile=coverage.out ./...

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v -o slack-review-notify

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: slack-review-notify
          path: slack-review-notify

  create-tag-and-release:
    name: Create Tag and Release
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main,master
          default_bump: patch
          tag_prefix: v

      # リリースワークフローの処理をここで直接実行
      - name: Set up Go
        if: steps.tag_version.outputs.new_tag != ''
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Install dependencies
        if: steps.tag_version.outputs.new_tag != ''
        run: go mod download

      - name: Build binaries
        if: steps.tag_version.outputs.new_tag != ''
        run: |
          GOOS=linux GOARCH=amd64 go build -o slack-review-notify-linux-amd64
          GOOS=darwin GOARCH=amd64 go build -o slack-review-notify-darwin-amd64
          GOOS=darwin GOARCH=arm64 go build -o slack-review-notify-darwin-arm64
          GOOS=windows GOARCH=amd64 go build -o slack-review-notify-windows-amd64.exe

      - name: Create GitHub Release
        if: steps.tag_version.outputs.new_tag != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          files: |
            slack-review-notify-linux-amd64
            slack-review-notify-darwin-amd64
            slack-review-notify-darwin-arm64
            slack-review-notify-windows-amd64.exe
          draft: false
          prerelease: false

      - name: Set up Docker Buildx
        if: steps.tag_version.outputs.new_tag != ''
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: steps.tag_version.outputs.new_tag != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.tag_version.outputs.new_tag != ''
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.tag_version.outputs.new_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
